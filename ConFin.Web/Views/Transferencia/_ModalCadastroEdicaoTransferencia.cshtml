@using ConFin.Common.Web.Extension
@model ConFin.Web.ViewModel.TransferenciaViewModel
@{ Layout = null;}

<style>
    .trans-pago-recebido {
        background-color: limegreen  !important;
    }
</style>

<div id="modalTransferenciaCadastroEdicao" class="modal">

    <div class="modal-content">
        <div class="section" style="text-align: center">
            <h1 style="color: gray; font-size: 20pt; margin-top: -5px;" class="caption">@(ViewBag.IndicadorCadastro == "S" ? "Cadastrar" : "Editar") Transferência</h1>
            <div class="divider" style="margin-top: -10px;"></div>
        </div>
        <div class="row">
            <form id="formTransferenciaCadastroEdicao" class="col s12">
                <input type="hidden" id="hiddenIndicadorCadastroTransferencia" value="@ViewBag.IndicadorCadastro"/>
                <input type="hidden" name="Id" value="@Model.Id"/>
                <input type="hidden" id="hiddenIndicadorPagoRecebido" name="IndicadorPagoRecebido" value="@Model.IndicadorPagamentoReceb"/>

                <div class="row">

                    <div class="col s6">
                        <label>Conta de origem</label>
                        <select @(Model.DesabilitaAlteracao ? "disabled" : "") class="browser-default" name="IdContaOrigem" id="comboContaOrigem" onchange="filtraContasTransferencia(this, 'comboContaDestino')">
                            <option data-selecione value="" disabled selected>Selecione</option>
                            @foreach (var conta in Model.ContasFinanceira)
                            {
                                <option @(Model.IdContaOrigem == conta.Id ? "selected" : string.Empty) value="@conta.Id">@conta.Nome</option>
                            }
                        </select>
                    </div>
                    <div class="col s6">
                        <label>Conta de destino</label>
                        <select @(Model.DesabilitaAlteracao ? "disabled" : "") class="browser-default" name="IdContaDestino" id="comboContaDestino" onchange="filtraContasTransferencia(this, 'comboContaOrigem')">
                            <option data-selecione value="" disabled selected>Selecione</option>
                            @foreach (var conta in Model.ContasFinanceira)
                            {
                                <option @(Model.IdContaDestino == conta.Id ? "selected" : string.Empty) value="@conta.Id">@conta.Nome</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="row" style="margin-top: -15px;">
                    <div class="input-field col s6">
                        <input @(Model.DesabilitaAlteracao ? "disabled" : "") id="txtDescricaoTransferencia" type="text" class="validate" maxlength="50" name="Descricao" value="@Model.Descricao">
                        <label for="txtDescricaoTransferencia">Descrição</label>
                    </div>
                    <div class="col s6">
                        <label>Categoria</label>
                        <select @(Model.DesabilitaAlteracao ? "disabled" : "") class="browser-default" name="IdCategoria" id="comboCategoriasTransferencia">
                            <option value="" disabled selected>Selecione</option>
                            @foreach (var categoria in Model.Categorias)
                            {
                                <option @(Model.IdCategoria == categoria.Id ? "selected" : string.Empty) value="@categoria.Id">@categoria.Nome</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="row" style="margin-top: -15px;">
                    <div class="input-field col s3">
                        <input @(Model.DesabilitaAlteracao ? "disabled" : "") class="money" id="txtValorTransferencia" type="text" name="Valor" maxlength="14" value="@Model.Valor.ToMoney()">
                        <label for="txtValorTransferencia">Valor</label>
                    </div>
                    <div class="input-field col s3">
                        <input @(Model.DesabilitaAlteracao ? "disabled" : "") id="txtDataTransferencia" type="text" class="date" name="Data" value="@Model.DataTransferencia">
                        <label for="txtDataTransferencia" class="active">Data</label>
                    </div>
                    <div class="input-field col s6" style="text-align: center">
                        <span id="spanMensagemIndicadorPgto">Já foi realizada?</span>
                        <a href="javascript:void(0)" onclick="@(Model.DesabilitaAlteracao ? "" : "alteraIndicadorTransferenciaPago(this)")" style="background-color: gray"
                           class="btn-floating @(Model.IndicadorPagoRecebido == "S" ? "trans-pago-recebido" : string.Empty)">
                            <i class="material-icons">thumb_up</i>
                        </a>
                    </div>
                </div>
            </form>
        </div>
    </div>

    @if (ViewBag.IndicadorCadastro == "N" && !Model.UsuarioPodeEditarTransferencia)
    {
        <div class="modal-footer" style="margin-top: -25px; margin-bottom: 25px; margin-left: 28px !important; width: 95% !important; background-color: lavender; text-align: center;">
            <p>Somente o usuário que cadastrou esta transferência pode realizar as alterações.</p>
        </div>

    }
    else
    {
        <div class="modal-footer" style="margin-top: -25px;">
            <a href="javascript:void(0)" onclick="cadastrarEditarTransferencia()" style="color: green" class="modal-action waves-effect waves-green btn-flat">Confirmar</a>
            <a href="javascript:void(0)" style="color: red" class="modal-action modal-close waves-effect waves-red btn-flat">Cancelar</a>
        </div>
        
    }

</div>


<script>
    
    $('#comboContaOrigem, #comboContaDestino, #comboCategoriasTransferencia').material_select();

    var urlPostPutTransferencia = $("#hiddenIndicadorCadastroTransferencia").val() == "S"
        ? '@Url.Action("Post","Transferencia")'
        : '@Url.Action("Put","Transferencia")';

    var urlGetContas = '@Url.Action("GetFilter","ContaFinanceira")';


    function alteraIndicadorTransferenciaPago(btn) {
        $(btn).toggleClass("trans-pago-recebido");
        $("#hiddenIndicadorPagoRecebido").val($(btn).hasClass("trans-pago-recebido") ? "S" : "N");
    }

    function filtraContasTransferencia(btn, idSelectFiltrado) {

        var idContaSelecionada = $(btn).val();
        var idContaAnteriorComboFiltrado = $("#" + idSelectFiltrado).val();

        $.get(urlGetContas, {
            idConta: idContaSelecionada
        }).success(function (json) {
            $("#" + idSelectFiltrado + " > option:not(option[data-selecione])").remove();

            json.map(function (conta) {
                $("#" + idSelectFiltrado).append("<option value='" + conta.Id + "'>" + conta.Nome + "</option>");
            });

            $("#" + idSelectFiltrado).val(idContaAnteriorComboFiltrado);
            $("#" + idSelectFiltrado).material_select();
            console.log(json);
        });
    }

    function cadastrarEditarTransferencia() {
        $('.toast').remove();
        $.toast({ condition: !$("#comboContaOrigem").val(), message: "Favor preencher o campo Conta Origem" });
        $.toast({ condition: !$("#comboContaDestino").val(), message: "Favor preencher o campo Conta Destino" });
        $.toast({ condition: !$("#comboCategoriasTransferencia").val(), message: "Favor preencher o campo Categoria" });
        isFieldEmpty($("#txtDescricaoTransferencia, #txtValorTransferencia, #txtDataTransferencia"));
        $.toast({ condition: !!$("#txtDataTransferencia").val() && !$("#txtDataTransferencia").val().isValidDate(), message: "Data de transferência inválida" });

        if ($('.toast').length)
            return false;

        $.post(urlPostPutTransferencia, $("#formTransferenciaCadastroEdicao").toObject()).success(function (message) {
            $("#modalTransferenciaCadastroEdicao").modal("close");
            $.toast({ message: message, type: "success" });
            atualizarTransferencias();
        });
    }

</script>
